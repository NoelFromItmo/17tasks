<?php

namespace phif\patch;

use \phif\NodeFacade;
use \PhpParser\Node;

class Pure {

  static function patch ($blueprint) {

    static $purePHPFunctions = [
      'addcslashes',
      'addslashes',
      'array_change_key_case',
      'array_chunk',
      'array_column',
      'array_combine',
      'array_count_values',
      'array_diff_key',
      'array_fill',
      'array_fill_keys',
      'array_intersect_key',
      'array_key_exists',
      'array_keys',
      'array_values',
      'bin2hex',
      'chop',
      'chr',
      'chunk_split',
      'convert_cyr_string',
      'convert_uudecode',
      'convert_uuencode',
      'count_chars',
      'crc32',
      'crypt',
      'explode',
      'hebrev',
      'hebrevc',
      'hex2bin',
      'htmlspecialchars_decode',
      'implode',
      'is_array',
      'join',
      'key',
      'lcfirst',
      'levenshtein',
      'ltrim',
      'md5',
      'metaphone',
      'nl2br',
      'number_format',
      'ord',
      'quoted_printable_decode',
      'quoted_printable_encode',
      'quotemeta',
      'rtrim',
      'sha1',
      'soundex',
      'str_getcsv',
      'str_pad',
      'str_repeat',
      'str_rot13',
      'str_shuffle',
      'str_split',
      'str_word_count',
      'strcasecmp',
      'strchr',
      'strcmp',
      'strcoll',
      'strcspn',
      'strip_tags',
      'stripcslashes',
      'stripos',
      'stripslashes',
      'stristr',
      'strlen',
      'strnatcasecmp',
      'strnatcmp',
      'strncasecmp',
      'strncmp',
      'strpbrk',
      'strpos',
      'strrchr',
      'strrev',
      'strripos',
      'strrpos',
      'strspn',
      'strstr',
      'strtok',
      'strtolower',
      'strtoupper',
      'strtr',
      'substr',
      'substr_compare',
      'substr_count',
      'substr_replace',
      'trim',
      'ucfirst',
      'ucwords',
      'wordwrap',
    ];

    foreach ($purePHPFunctions as $purePHPFunction)
      $blueprint[NodeFacade::identifier($purePHPFunction, 'function') . '.a_pure'] = true;

  }

}
